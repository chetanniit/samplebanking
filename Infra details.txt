package test;

import java.io.File;
import java.io.FileInputStream;
import java.io.FileNotFoundException;
import java.io.FileOutputStream;
import java.io.IOException;
import java.util.Arrays;
import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Properties;
import java.util.Set;
import java.util.TreeMap;

import org.apache.poi.ss.usermodel.Cell;
import org.apache.poi.ss.usermodel.Row;
import org.apache.poi.xssf.usermodel.XSSFSheet;
import org.apache.poi.xssf.usermodel.XSSFWorkbook;

public class ReadInfraDetails {

	private static final String pcfConfigDirectory = "D:\\Microservices\\Code\\";

	private static final List<String> targetFilesPcf = Arrays.asList("pcf-prd.config", "pcf-uat.config",
			"pcf-dev.config", "pcf-sit.config", "pcf-nft.config", "pcf-common.config");


	public static void main(String[] args) throws IOException {

		File dir = new File("D:\\Microservices\\Code\\");
		File[] subdirs = dir.listFiles(File::isDirectory);

		if (subdirs != null) {
			for (File subdir : subdirs) {
				Map<String, Object[]> dataMap = new TreeMap<String, Object[]>();
				System.out.println(subdir.getName());
				for (int i = 0; i < targetFilesPcf.size(); i++) {
					Properties prop = new Properties();
					String fileName = pcfConfigDirectory + subdir.getName() + "\\pcf-config\\" + targetFilesPcf.get(i);
					try (FileInputStream fis = new FileInputStream(fileName)) {
						prop.load(fis);
					} catch (FileNotFoundException ex) {
					} catch (IOException ex) {
					}

					dataMap.put(String.valueOf(i),
							new Object[] { targetFilesPcf.get(i).split("\\.")[0], prop.getProperty("pcf_instances"),
									prop.getProperty("pcf_buildpack"), prop.getProperty("pcf_memory") });

					System.out.println(targetFilesPcf.get(i).split("\\.")[0] + "--" + prop.getProperty("pcf_instances")
							+ "--" + prop.getProperty("pcf_buildpack") + "--" + prop.getProperty("pcf_memory"));
				}
				createExcel(dataMap,subdir.getName());
			}
		}

	}

	public static void createExcel(Map<String, Object[]> dataToWrite, String fileName) {
		System.out.println(dataToWrite);
		XSSFWorkbook workbook = new XSSFWorkbook();

		// Create a blank sheet

		XSSFSheet sheet = workbook.createSheet("Infra_Details");

		// Iterate over data and write to sheet

		Set<String> keyset = dataToWrite.keySet();
		int rownum = 0;
		for (String key : keyset) {

			Row row = sheet.createRow(rownum++);
			Object[] objArr = dataToWrite.get(key);
			int cellnum = 0;
			for (Object obj : objArr) {
				Cell cell = row.createCell(cellnum++);
				if (obj instanceof String)
					cell.setCellValue((String) obj);
				else if (obj instanceof Integer)
					cell.setCellValue((Integer) obj);
			}
		}

		// Write the workbook in file system

		try {
			FileOutputStream out = new FileOutputStream(
					new File("D:\\Microservices\\Output\\"+fileName+".xlsx"));
			workbook.write(out);
			out.close();
			System.out.println("excel written successfully on disk.");
		} catch (Exception e) {
			e.printStackTrace();
		}
	}

}
